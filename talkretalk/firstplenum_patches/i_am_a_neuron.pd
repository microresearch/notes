#N canvas 50 0 999 692 10;
#X msg 131 495 print;
#X msg 127 99 init;
#X msg 128 274 train;
#X msg 128 387 write;
#X msg 128 118 init 0.5;
#X msg 128 138 init 1 0.5 0 0.5;
#X text 234 101 init all weights with 0;
#X text 235 120 init all weights with 0.5;
#X text 235 137 init weights for each sensor;
#X msg 128 163 learn 1;
#X msg 128 197 learn 1 0.9 0.1;
#X text 226 163 set learning rate to 1;
#X msg 128 180 learn 0.5 0.999;
#X text 227 179 set learning rate to 0.5 and factor to 0.999;
#X text 227 197 set learning rate to 1 \, factor to 0.9 and offset
to 0.1;
#X msg 128 214 neighbour 1;
#X msg 128 231 neighbour 0.5 0.999;
#X msg 128 248 neighbour 1 0.9 0.1;
#X text 248 215 set neighbourhood to 1;
#X text 249 231 set neighbourhoodto 0.5 and factor to 0.999;
#X text 249 249 set neighbourhood to 1 \, factor to 0.9 and offset
to 0.1;
#X text 180 269 set som to train mode (learn from sensor-input and
output winning neuron);
#X text 179 291 set som to test mode (output winning neuron for sensor-input
\, but do not learn !);
#X msg 129 328 rule INSTAR;
#X msg 129 345 rule OUTSTAR;
#X msg 129 362 rule KOHONEN;
#X text 218 327 learn with IN-STAR rule;
#X text 219 345 learn with OUT-STAR rule;
#X text 219 362 learn with KOHONENrule;
#X msg 128 405 write mysom.som;
#X msg 129 429 read;
#X msg 129 447 read mysom.som;
#X text 203 495 for debugging;
#X floatatom 70 614 4 0 0 0 - - -;
#X text 113 618 winning neuron;
#X obj 70 559 ann_som 1 8 1;
#X obj 703 192 +;
#X floatatom 715 260 5 0 0 0 - - -;
#X floatatom 555 122 5 0 0 0 - - -;
#X text 205 561 create a new SOM with 8x1 neurons \, each having 1
sensors;
#X obj 646 152 * \$1;
#X obj 684 150 * \$2;
#X text 723 129 weights;
#X text 700 84 8 sensors;
#X obj 676 103 unpack 0 0 0 0 0 0 0 0;
#X obj 727 151 * \$3;
#X obj 764 149 * \$4;
#X obj 807 150 * \$5;
#X obj 845 149 * \$6;
#X obj 889 149 * \$7;
#X obj 927 147 * \$8;
#X text 661 27 i am a neuron;
#X obj 637 57 r n1;
#X obj 672 56 r n2;
#X obj 708 57 r n3;
#X obj 742 54 r n4;
#X obj 781 53 r n5;
#X obj 816 52 r n6;
#X obj 852 52 r n7;
#X obj 887 51 r n8;
#X text 293 529 or we can create neuron 8 inputs for all mics;
#X obj 103 591 s finalneuron;
#X obj 684 123 r w1;
#X obj 719 123 r w2;
#X obj 753 122 r w3;
#X obj 789 122 r w4;
#X obj 828 122 r w5;
#X obj 898 121 r w7;
#X obj 933 121 r w8;
#X obj 864 122 r w6;
#X text 396 492 comment;
#X msg 193 530 new 8 8 1;
#X obj 303 436 r neuroninput1;
#X obj 619 419;
#X text 599 387 weight calculations;
#X obj 221 28 loadbang;
#X connect 0 0 35 0;
#X connect 1 0 35 0;
#X connect 2 0 35 0;
#X connect 3 0 35 0;
#X connect 5 0 35 0;
#X connect 9 0 35 0;
#X connect 10 0 35 0;
#X connect 12 0 35 0;
#X connect 15 0 35 0;
#X connect 16 0 35 0;
#X connect 17 0 35 0;
#X connect 23 0 35 0;
#X connect 24 0 35 0;
#X connect 25 0 35 0;
#X connect 29 0 35 0;
#X connect 30 0 35 0;
#X connect 31 0 35 0;
#X connect 35 0 33 0;
#X connect 35 0 61 0;
#X connect 36 0 37 0;
#X connect 40 0 36 0;
#X connect 41 0 36 0;
#X connect 44 0 38 0;
#X connect 44 0 40 0;
#X connect 44 1 41 0;
#X connect 44 2 45 0;
#X connect 44 3 46 0;
#X connect 44 4 47 0;
#X connect 44 5 48 0;
#X connect 44 6 49 0;
#X connect 44 7 50 0;
#X connect 45 0 36 0;
#X connect 46 0 36 0;
#X connect 47 0 36 0;
#X connect 48 0 36 0;
#X connect 49 0 36 0;
#X connect 50 0 36 0;
#X connect 52 0 44 0;
#X connect 53 0 44 0;
#X connect 54 0 44 0;
#X connect 55 0 44 0;
#X connect 56 0 44 0;
#X connect 57 0 44 0;
#X connect 58 0 44 0;
#X connect 59 0 44 0;
#X connect 62 0 40 1;
#X connect 63 0 41 1;
#X connect 64 0 45 1;
#X connect 65 0 46 1;
#X connect 66 0 47 1;
#X connect 67 0 49 1;
#X connect 68 0 50 1;
#X connect 69 0 48 1;
#X connect 71 0 35 0;
#X connect 72 0 35 0;
#X connect 75 0 4 0;
#X connect 75 0 71 0;
#X connect 75 0 15 0;
#X connect 75 0 9 0;
#X connect 75 0 2 0;
#X connect 75 0 25 0;
