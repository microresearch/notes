* Lattice iCE40-HX8K breakout board
* verilog
* resources


https://github.com/nesl/ice40_examples/ - examples and installing tools

** flip/flop//SR

https://www.rs-online.com/designspark/a-gentle-introduction-to-fpga-programming

http://www.bitweenie.com/listings/verilog-shift-register/

https://github.com/Obijuan/open-fpga-verilog-tutorial/wiki/Chapter-10:-shift-register

https://esrd2014.blogspot.com/p/d-flip-flop.html

** tools?

http://www.clifford.at/icestorm/ 

https://wiki.debian.org/FPGA/Lattice - full outline and links

* TODO:

- toolchain and basic example, upload

The pipeline employs the following tools:

    yosys - for logic synthesis of Verilog code. The output is a
    netlist describing how all cells are connected together in BLIF
    format.

    arachne-pnr - for placement and routing of the netlist. The output
    is a textual bitstream.

The final step, i.e. preparing the bitstream for the FPGA, and
transferring it to the FPGA, uses:

    fpga-icestorm - for the Lattice boards, using libusb/libftdi

- how to connect to I/O
- simple shift register with all ins and outs
- simulation
- how to maybe implement ouroboric/SR mutated functionality


