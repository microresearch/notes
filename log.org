* micro/avr golden rules

- if porting or if code works on arduino remember that arduino makefile/ide sets up timers AND sei() - also tpo set certain pins and in or out
- if it behaves oddly is a memory issue - check what other files are being compiled
  
* 5/6

- AC: OCR1 (9 on arduino) is for slow pulses (decide on divider) -
  alter pulse width and frequency, 16 bits, OCR2 (11) is fast 8 bit for
  filter - square wave from 0=8MHz (/100=80KHz->300Hz when filter=255)


- other notes: 

- revisit crow and raven stuff - sort recoridng also for crows

FROM: https://www.muffwiggler.com/forum/viewtopic.php?p=1529740

To make the Krr sound, use a fast LFO (saw) that you gate with a VCA
or analog switch. Control the VCA/switch with an EG or a gate
processor that gives you one short pulse. Use the LFO to control the
VCA of your ordinary signal patch.

Maybe using some noise to FM an oscillator or possibly filtering noise
to get the "K" followed quickly by a end of rise pulse triggering a
second envelope for the "uh" with a formant patch? Might not
work...just thinking outloud.

I've gotten decent raven croaks with a low frequency impulse train
(like 25 Hz) run through a vocal formant filter.


https://www.muffwiggler.com/forum/files/crow_patch_in_nord_456.png

- RAVEN ideas and check out

* 6/6

- always minimum 10mm panel pcb margin at top and bottom!

* 10/6

- adding kicad footprint for reichelt dc jack - DC-EBU 072337. swop over as plan/datasheet is from below...
- added noise/logging to gpslogger - accuracy is good outside...

* 11/6

- alignment of all for breath looks good - double-check all before order!

* 19/6

- for all colours smaller panel: 20hp, one side is black mask on bare
  pcb, other side is gold on black mask (or black mask on gold)

filtered low freq pwm, 4 bit DAC (for both low and high sides),
trimmers for noise level on back, finger osc centre pads into mix,
maybe top or bottom is diff amp (TO TEST) and other is comparator (x2
on each side)...

** avr heatwork

- run through/playback all memory on interrupt (HOW? where we did something similar)?
- pulse heat every X seconds and pause x seconds - 

// lots of new variations now - 1 bit address playback and 1 bit buffer/SHA256 playback but we need minute or longer heat pauses

* 21/6

- for pro mini arduino 5v we use:

BOARD_TAG = pro5v
BOARD_CLOCK=16mhz
ARDUINO_LIBS = Wire 
MONITOR_PORT = /dev/ttyACM1
F_CPU = 16000000L
include /root/Arduino-Makefile/Arduino.mk

and hold down reset first until it starts uploading

** all colours

- tested comparator with pwm in and this can be interesting with external CV
- also mix back filter feedback is very crackly and could pulse nicely somehow?
- check paths

